{"version":3,"sources":["card.js","BreakfastCard.js","SidebarCart.js","MenuItem.js","App.js","index.js"],"names":["ProductCard","_ref","count","onIncrease","onDecrease","quantity","setQuantity","useState","unit","setUnit","plates","setExtraPlates","handleUnitChange","e","target","value","React","createElement","className","src","alt","type","name","checked","onChange","handleCheckboxChange","prev","onClick","decreaseQuantity","prevcount","newQuantity","increaseQuantity","BreakfastCard","SidebarCart","cartItems","onClose","length","map","item","index","key","title","UnitSwitch","toggleUnit","MenuItem","_ref2","category","onCartUpdate","setCount","handleIncrease","difference","handleDecrease","CollapsibleSection","_ref3","children","isOpen","setIsOpen","ChevronDown","Menu","setCartItems","isSidebarOpen","setIsSidebarOpen","updateCartCount","change","prevItems","existingItemIndex","findIndex","i","updatedItems","splice","toggleSidebar","handlers","useSwipeable","onSwipedLeft","onSwipedRight","trackMouse","ShoppingCart","reduce","acc","prevUnit","items","section","itemIndex","Object","assign","ChevronLeft","ChevronRight","App","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.51903c30.chunk.js","sourcesContent":["import React, {useState } from 'react';\n\nconst ProductCard = ({count,onIncrease,onDecrease}) => {\n  const [quantity, setQuantity] = useState(0);\n  const [unit, setUnit] = useState('kg');\n  const [plates, setExtraPlates] = useState(false); \n  const increaseQuantity = () => {\n    setQuantity(prevcount => {\n      const newQuantity = prevcount + 1;\n      onIncrease(newQuantity);\n      return newQuantity;\n    });\n  };\n  \n  const decreaseQuantity = () => {\n    if (quantity > 0) {\n      setQuantity(prevcount => {\n        const newQuantity = prevcount - 1;\n        onDecrease(newQuantity);\n        return newQuantity;\n      });\n    }\n  };\n\n  const handleUnitChange = (e) => {\n    setUnit(e.target.value);\n  };\n\n  const handleCheckboxChange = () => {\n    setExtraPlates(prev => !prev);\n  };\n\n  return (\n    <div className=\"border rounded-lg p-4 flex justify-between items-center shadow-lg max-w-md mx-auto\">\n      <div className=\"w-1/3\">\n        <img src=\"biryani.jpg\" alt=\"Product\" className=\"w-24 h-24 object-cover rounded-lg\" />\n      </div>\n      <div className=\"w-2/3 flex flex-col justify-between\">\n        <div className=\"flex justify-between items-center mb-4\">\n          <div className=\"flex space-x-2 border p-1 rounded-lg\">\n            <label className={`cursor-pointer px-2 ${unit === 'kg' ? 'bg-red-500 text-white' : ''}`}>\n              <input type=\"radio\" name=\"unit\" value=\"kg\" checked={unit === 'kg'} onChange={handleUnitChange} className=\"hidden\" />\n              kg\n            </label>\n            <label className={`cursor-pointer px-2 ${unit === 'plate' ? 'bg-red-500 text-white' : ''}`}>\n              <input type=\"radio\" name=\"unit\" value=\"plate\" checked={unit === 'plate'} onChange={handleUnitChange} className=\"hidden\" />\n              plate\n            </label>\n          </div>\n          <div className=\"text-lg font-bold\">\n            Biryani\n          </div>\n        </div>\n        {unit === 'plate' && (\n          <div className=\"flex justify-between items-center space-x-4\">\n            <label className=\"flex items-center space-x-2\">\n              <input\n                type=\"checkbox\"\n                checked={plates}\n                onChange={handleCheckboxChange}\n                className=\"w-4 h-4\"\n              />\n              <span className=\"text-sm\">plates</span>\n            </label>\n            <div className=\"text-xl font-bold\">₹200</div>\n          </div>\n        )}\n        {unit === 'kg' && (<div className=\"flex justify-between items-center\">\n          <div className=\"flex items-center space-x-4\">\n            <button\n              onClick={decreaseQuantity}\n              className=\"text-lg font-bold border px-3 py-1 rounded-lg hover:bg-gray-200\"\n            >\n              -\n            </button>\n            <span className=\"text-lg font-bold\">{quantity}</span>\n            <button\n              onClick={increaseQuantity}\n              className=\"text-lg font-bold border px-3 py-1 rounded-lg hover:bg-gray-200\"\n            >\n              +\n            </button>\n          </div>\n          <div className=\"text-xl font-bold\">₹200</div>\n        </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ProductCard;\n","import React, { useState } from 'react';\n\nconst BreakfastCard = () => {\n  const [plates, setExtraPlates] = useState(false);\n\n  const handleCheckboxChange = () => {\n    setExtraPlates((prev) => !prev);\n  };\n\n  return (\n    <div className=\"border rounded-lg p-4 flex justify-between items-center shadow-lg max-w-md mx-auto\">\n      <div className=\"flex w-full items-center\">\n        {/* Image on the left */}\n        <div className=\"w-1/3\">\n          <img src=\"biryani.jpg\" alt=\"Product\" className=\"w-24 h-24 object-cover rounded-lg\" />\n        </div>\n        \n        {/* Middle content (Extra plates) */}\n        <div className=\"w-1/3 flex flex-col items-center\">\n          <label className=\"flex items-center space-x-2\">\n            <input\n              type=\"checkbox\"\n              checked={plates}\n              onChange={handleCheckboxChange}\n              className=\"w-4 h-4\"\n            />\n            <span className=\"text-sm\">Extra plates</span>\n          </label>\n        </div>\n        \n        {/* Right content (Biryani and Price) */}\n        <div className=\"w-1/3 flex flex-col justify-between items-end\">\n          <div className=\"flex justify-end items-center mb-4\">\n            <div className=\"text-lg font-bold\">Biryani</div>\n          </div>\n          <div className=\"text-xl font-bold\">₹200</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default BreakfastCard;\n","import React from 'react';\n\nconst SidebarCart = ({ cartItems, onClose }) => {\n  return (\n    <div className=\"fixed top-0 right-0 w-80 h-full bg-white shadow-lg border-l border-gray-200 overflow-y-auto transition-transform transform translate-x-0\">\n      <button \n        onClick={onClose} \n        className=\"absolute top-2 right-2 text-gray-600 hover:text-gray-800 text-xl\"\n      >\n        &times;\n      </button>\n      <h2 className=\"text-2xl font-bold p-4 border-b border-gray-200\">Cart Items</h2>\n      <div className=\"p-4\">\n        {cartItems.length === 0 ? (\n          <p className=\"text-center text-gray-600\">Your cart is empty</p>\n        ) : (\n          <ul>\n            {cartItems.map((item, index) => (\n              <li key={index} className=\"flex justify-between items-center py-2 border-b border-gray-200\">\n                <span>{item.title}</span>\n                <span>{item.quantity}</span>\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default SidebarCart;","// import React, { useState } from 'react';\n// import { ChevronDown, ShoppingCart } from 'lucide-react';\n// import ProductCard from './card';\n// import BreakfastCard from './BreakfastCard';\n// const UnitSwitch = ({ unit, toggleUnit }) => {\n//   return (\n//     <div\n//       className={`w-12 h-6 flex items-center bg-gray-300 rounded-full p-1 cursor-pointer transition-colors duration-300 ${\n//         unit === 'kg' ? 'bg-blue-500' : 'bg-green-500'\n//       }`}\n//       onClick={toggleUnit}\n//     >\n//       <div\n//         className={`bg-white w-5 h-5 rounded-full shadow-md transform transition-transform duration-300 ${\n//           unit === 'kg' ? 'translate-x-0' : 'translate-x-6'\n//         }`}\n//       ></div>\n//     </div>\n//   );\n// };\n\n// const MenuItem = ({ category, onCartUpdate, unit }) => {\n//   const [count, setCount] = useState(0);\n\n//   const handleIncrease = (newQuantity) => {\n//     const difference = newQuantity - count;\n//     setCount(newQuantity);\n//     onCartUpdate(difference);\n//   };\n\n//   const handleDecrease = (newQuantity) => {\n//     const difference = count - newQuantity;\n//     setCount(newQuantity);\n//     onCartUpdate(-difference);\n//   };\n\n//   const renderCard = () => {\n    \n//     if (category === 'Breakfast') {\n//       return (\n//           <BreakfastCard unit={unit} />\n//       );\n//     }\n//     return <ProductCard count={count} onIncrease={handleIncrease} onDecrease={handleDecrease} unit={unit} />;\n//   };\n\n//   return <div>{renderCard()}</div>;\n// };\n\n// const CollapsibleSection = ({ title, count, children }) => {\n//   const [isOpen, setIsOpen] = useState(false);\n\n//   return (\n//     <div className=\"mb-4\">\n//       <div\n//         onClick={() => setIsOpen(!isOpen)}\n//         className=\"flex items-center justify-between p-3 bg-white rounded-lg shadow cursor-pointer\"\n//       >\n//         <span className=\"font-medium\">{title}</span>\n//         <div className=\"flex items-center\">\n//           <div className=\"flex items-center justify-center w-8 h-8 mr-2 text-white bg-green-500 rounded-full\">\n//             <ChevronDown\n//               className={`w-5 h-5 transition-transform ${isOpen ? 'transform rotate-180' : ''}`}\n//             />\n//           </div>\n//           <div className=\"flex items-center justify-center w-8 h-8 text-xs text-white bg-blue-500 rounded-full\">\n//             {count}\n//           </div>\n//         </div>\n//       </div>\n//       {isOpen && <div className=\"mt-2\">{children}</div>}\n//     </div>\n//   );\n// };\n\n// const Menu = () => {\n//   const [cartCount, setCartCount] = useState(0);\n//   const [unit, setUnit] = useState('kg'); // State for toggle between kg and plate\n\n//   const updateCartCount = (change) => {\n//     setCartCount((prevCount) => prevCount + change);\n//   };\n\n//   const toggleUnit = () => {\n//     setUnit((prevUnit) => (prevUnit === 'kg' ? 'plate' : 'kg'));\n//   };\n\n//   const menuData = [\n//     {\n//       category: 'Breakfast',\n//       items: [\n//         { title: 'South Indian Breakfast Delights', count: 10 },\n//         { title: 'North Indian Breakfast Delights', count: 10 }\n//       ]\n//     },\n//     {\n//       category: 'Lunch',\n//       items: [\n//         { title: 'Veg', count: 10 },\n//         { title: 'Non Veg', count: 20 }\n//       ]\n//     },\n//     {\n//       category: 'Snacks',\n//       items: [\n//         { title: 'North', count: 8 },\n//         { title: 'South', count: 10 },\n//         { title: 'Chinese', count: 13 }\n//       ]\n//     }\n//   ];\n\n//   return (\n//     <div className=\"p-4 bg-gray-100 min-h-screen\">\n//       {/* Cart Icon */}\n//       <div className=\"flex items-center justify-between mb-6 bg-green-600 p-4 rounded\">\n//         <h1 className=\"text-2xl font-bold text-white\">&gt; Menu</h1>\n//         <div className=\"flex items-center relative\">\n//           <div className=\"relative\">\n//             <ShoppingCart className=\"w-8 h-8 text-white\" />\n//             {cartCount > 0 && (\n//               <span className=\"absolute top-0 right-0 bg-red-600 text-white text-xs font-bold px-1.5 py-0.5 rounded-full\">\n//                 {cartCount}\n//               </span>\n//             )}\n//           </div>\n//         </div>\n//       </div>\n//       <div className=\"flex items-center justify-end mb-2\">\n//         {/* <span className=\"text-lg font-bold\">Kg/Plate</span> */}\n//         <div className=\"flex items-center\">\n//             <UnitSwitch unit={unit} toggleUnit={toggleUnit} />\n//             <span className=\"ml-2\">Kg/Plate</span>\n//         </div>\n//       </div>\n      \n\n//       {/* Menu Sections */}\n//       {menuData.map((section, index) => (\n//         <div key={index} className=\"mb-6\">\n//           <h2 className=\"text-xl font-bold mb-3\">{section.category}</h2>\n//           {section.items.map((item, itemIndex) => (\n//             <CollapsibleSection key={itemIndex} title={item.title} count={item.count}>\n//               <MenuItem category={section.category} onCartUpdate={updateCartCount} unit={unit} />\n//             </CollapsibleSection>\n//           ))}\n//         </div>\n//       ))}\n//     </div>\n//   );\n// };\n\n// export default Menu;\n\n\n\n// import React, { useState } from 'react';\n// import { ChevronDown, ShoppingCart } from 'lucide-react';\n// import ProductCard from './card';\n// import BreakfastCard from './BreakfastCard';\n\n// const UnitSwitch = ({ unit, toggleUnit }) => {\n//   return (\n//     <div\n//       className={`w-12 h-6 flex items-center bg-gray-300 rounded-full p-1 cursor-pointer transition-colors duration-300 ${\n//         unit === 'kg' ? 'bg-blue-500' : 'bg-green-500'\n//       }`}\n//       onClick={toggleUnit}\n//     >\n//       <div\n//         className={`bg-white w-5 h-5 rounded-full shadow-md transform transition-transform duration-300 ${\n//           unit === 'kg' ? 'translate-x-0' : 'translate-x-6'\n//         }`}\n//       ></div>\n//     </div>\n//   );\n// };\n\n// const MenuItem = ({ category, title, onCartUpdate, unit }) => {\n//   const [count, setCount] = useState(0);\n\n//   const handleIncrease = () => {\n//     setCount((prevCount) => {\n//       const newCount = prevCount + 1;\n//       onCartUpdate(category, title, newCount);\n//       return newCount;\n//     });\n//   };\n\n//   const handleDecrease = () => {\n//     setCount((prevCount) => {\n//       if (prevCount > 0) {\n//         const newCount = prevCount - 1;\n//         onCartUpdate(category, title, newCount);\n//         return newCount;\n//       }\n//       return prevCount;\n//     });\n//   };\n\n//   return (\n//     <div>\n//       {category === 'Breakfast' ? (\n//         <BreakfastCard unit={unit} />\n//       ) : (\n//         <ProductCard count={count} onIncrease={handleIncrease} onDecrease={handleDecrease} unit={unit} />\n//       )}\n//     </div>\n//   );\n// };\n\n// const CollapsibleSection = ({ title, count, children }) => {\n//   const [isOpen, setIsOpen] = useState(false);\n\n//   return (\n//     <div className=\"mb-4\">\n//       <div\n//         onClick={() => setIsOpen(!isOpen)}\n//         className=\"flex items-center justify-between p-3 bg-white rounded-lg shadow cursor-pointer\"\n//       >\n//         <span className=\"font-medium\">{title}</span>\n//         <div className=\"flex items-center\">\n//           <div className=\"flex items-center justify-center w-8 h-8 mr-2 text-white bg-green-500 rounded-full\">\n//             <ChevronDown\n//               className={`w-5 h-5 transition-transform ${isOpen ? 'transform rotate-180' : ''}`}\n//             />\n//           </div>\n//           <div className=\"flex items-center justify-center w-8 h-8 text-xs text-white bg-blue-500 rounded-full\">\n//             {count}\n//           </div>\n//         </div>\n//       </div>\n//       {isOpen && <div className=\"mt-2\">{children}</div>}\n//     </div>\n//   );\n// };\n\n// const Sidebar = ({ cartItems }) => {\n//   return (\n//     <div className=\"fixed top-0 right-0 w-64 h-full bg-white shadow-lg p-4\">\n//       <h2 className=\"text-xl font-bold mb-4\">Cart Items</h2>\n//       {cartItems.length === 0 ? (\n//         <p>No items in the cart</p>\n//       ) : (\n//         cartItems.map((item, index) => (\n//           <div key={index} className=\"mb-2\">\n//             <div className=\"flex justify-between\">\n//               <span>{item.title}</span>\n//               <span>{item.count}</span>\n//             </div>\n//             <span className=\"text-sm text-gray-500\">Category: {item.category}</span>\n//           </div>\n//         ))\n//       )}\n//     </div>\n//   );\n// };\n\n// const Menu = () => {\n//   const [cartCount, setCartCount] = useState(0);\n//   const [cartItems, setCartItems] = useState([]); // State to track cart items\n//   const [unit, setUnit] = useState('kg'); // State for toggle between kg and plate\n\n//   const updateCartCount = (category, title, newCount) => {\n//     setCartItems((prevItems) => {\n//       const itemIndex = prevItems.findIndex((item) => item.title === title && item.category === category);\n//       if (itemIndex !== -1) {\n//         const updatedItems = [...prevItems];\n//         if (newCount === 0) {\n//           // Remove item if count is zero\n//           updatedItems.splice(itemIndex, 1);\n//         } else {\n//           updatedItems[itemIndex].count = newCount;\n//         }\n//         return updatedItems;\n//       } else {\n//         // Add new item to cart\n//         return [...prevItems, { category, title, count: newCount }];\n//       }\n//     });\n//     setCartCount((prevCount) => prevCount + (newCount - (cartItems.find(item => item.title === title)?.count || 0)));\n//   };\n\n//   const toggleUnit = () => {\n//     setUnit((prevUnit) => (prevUnit === 'kg' ? 'plate' : 'kg'));\n//   };\n\n//   const menuData = [\n//     {\n//       category: 'Breakfast',\n//       items: [\n//         { title: 'South Indian Breakfast Delights', count: 10 },\n//         { title: 'North Indian Breakfast Delights', count: 10 }\n//       ]\n//     },\n//     {\n//       category: 'Lunch',\n//       items: [\n//         { title: 'Veg', count: 10 },\n//         { title: 'Non Veg', count: 20 }\n//       ]\n//     },\n//     {\n//       category: 'Snacks',\n//       items: [\n//         { title: 'North', count: 8 },\n//         { title: 'South', count: 10 },\n//         { title: 'Chinese', count: 13 }\n//       ]\n//     }\n//   ];\n\n//   return (\n//     <div className=\"flex\">\n//       <div className=\"p-4 bg-gray-100 min-h-screen flex-1\">\n//         {/* Cart Icon */}\n//         <div className=\"flex items-center justify-between mb-6 bg-green-600 p-4 rounded\">\n//           <h1 className=\"text-2xl font-bold text-white\">Menu</h1>\n//           <div className=\"flex items-center relative\">\n//             <div className=\"relative\">\n//               <ShoppingCart className=\"w-8 h-8 text-white\" />\n//               {cartCount > 0 && (\n//                 <span className=\"absolute top-0 right-0 bg-red-600 text-white text-xs font-bold px-1.5 py-0.5 rounded-full\">\n//                   {cartCount}\n//                 </span>\n//               )}\n//             </div>\n//           </div>\n//         </div>\n//         <div className=\"flex items-center justify-end mb-2\">\n//           <div className=\"flex items-center\">\n//             <UnitSwitch unit={unit} toggleUnit={toggleUnit} />\n//             <span className=\"ml-2\">Kg/Plate</span>\n//           </div>\n//         </div>\n\n//         {/* Menu Sections */}\n//         {menuData.map((section, index) => (\n//           <div key={index} className=\"mb-6\">\n//             <h2 className=\"text-xl font-bold mb-3\">{section.category}</h2>\n//             {section.items.map((item, itemIndex) => (\n//               <CollapsibleSection key={itemIndex} title={item.title} count={item.count}>\n//                 <MenuItem\n//                   category={section.category}\n//                   title={item.title}\n//                   onCartUpdate={updateCartCount}\n//                   unit={unit}\n//                 />\n//               </CollapsibleSection>\n//             ))}\n//           </div>\n//         ))}\n//       </div>\n\n//       {/* Sidebar */}\n//       <Sidebar cartItems={cartItems} />\n//     </div>\n//   );\n// };\n\n// export default Menu;\n\n\nimport React, { useState } from 'react';\nimport { ChevronDown, ShoppingCart, ChevronLeft, ChevronRight } from 'lucide-react'; // Import ChevronRight\nimport ProductCard from './card';\nimport BreakfastCard from './BreakfastCard';\nimport SidebarCart from './SidebarCart'; // Import Sidebar component\nimport { useSwipeable } from 'react-swipeable'; // Import useSwipeable\n\n// Custom Toggle Switch Component\nconst UnitSwitch = ({ unit, toggleUnit }) => {\n  return (\n    <div\n      className={`w-12 h-6 flex items-center bg-gray-300 rounded-full p-1 cursor-pointer transition-colors duration-300 ${\n        unit === 'kg' ? 'bg-blue-500' : 'bg-green-500'\n      }`}\n      onClick={toggleUnit}\n    >\n      <div\n        className={`bg-white w-5 h-5 rounded-full shadow-md transform transition-transform duration-300 ${\n          unit === 'kg' ? 'translate-x-0' : 'translate-x-6'\n        }`}\n      ></div>\n    </div>\n  );\n};\n\nconst MenuItem = ({ category, item, onCartUpdate, unit }) => {\n  const [count, setCount] = useState(0);\n\n  const handleIncrease = (newQuantity) => {\n    const difference = newQuantity - count;\n    setCount(newQuantity);\n    onCartUpdate(item, difference);\n  };\n\n  const handleDecrease = (newQuantity) => {\n    const difference = count - newQuantity;\n    setCount(newQuantity);\n    onCartUpdate(item, -difference);\n  };\n\n  const renderCard = () => {\n    if (category === 'Breakfast') {\n      return <BreakfastCard unit={unit} />;\n    }\n    return (\n      <ProductCard\n        count={count}\n        onIncrease={handleIncrease}\n        onDecrease={handleDecrease}\n        unit={unit}\n      />\n    );\n  };\n\n  return <div>{renderCard()}</div>;\n};\n\nconst CollapsibleSection = ({ title, count, children }) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  return (\n    <div className=\"mb-4\">\n      <div\n        onClick={() => setIsOpen(!isOpen)}\n        className=\"flex items-center justify-between p-3 bg-white rounded-lg shadow cursor-pointer\"\n      >\n        <span className=\"font-medium\">{title}</span>\n        <div className=\"flex items-center\">\n          <div className=\"flex items-center justify-center w-8 h-8 mr-2 text-white bg-green-500 rounded-full\">\n            <ChevronDown\n              className={`w-5 h-5 transition-transform ${isOpen ? 'transform rotate-180' : ''}`}\n            />\n          </div>\n          <div className=\"flex items-center justify-center w-8 h-8 text-xs text-white bg-blue-500 rounded-full\">\n            {count}\n          </div>\n        </div>\n      </div>\n      {isOpen && <div className=\"mt-2\">{children}</div>}\n    </div>\n  );\n};\n\nconst Menu = () => {\n  const [cartItems, setCartItems] = useState([]); // Track cart items\n  const [unit, setUnit] = useState('kg'); // State for toggle between kg and plate\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false); // Control sidebar visibility\n\n  const updateCartCount = (item, change) => {\n    setCartItems((prevItems) => {\n      const existingItemIndex = prevItems.findIndex((i) => i.title === item.title);\n      if (existingItemIndex > -1) {\n        // Update existing item quantity\n        const updatedItems = [...prevItems];\n        if (change > 0) {\n          updatedItems[existingItemIndex].quantity += change;\n        } else if (updatedItems[existingItemIndex].quantity + change <= 0) {\n          updatedItems.splice(existingItemIndex, 1); // Remove item if quantity is zero or less\n        } else {\n          updatedItems[existingItemIndex].quantity += change;\n        }\n        return updatedItems;\n      } else if (change > 0) {\n        // Add new item\n        return [...prevItems, { ...item, quantity: change }];\n      }\n      return prevItems;\n    });\n  };\n\n  const toggleUnit = () => {\n    setUnit((prevUnit) => (prevUnit === 'kg' ? 'plate' : 'kg'));\n  };\n\n  const toggleSidebar = () => {\n    setIsSidebarOpen((prev) => !prev);\n  };\n\n  const menuData = [\n    {\n      category: 'Breakfast',\n      items: [\n        { title: 'South Indian Breakfast Delights', count: 10 },\n        { title: 'North Indian Breakfast Delights', count: 10 }\n      ]\n    },\n    {\n      category: 'Lunch',\n      items: [\n        { title: 'Veg', count: 10 },\n        { title: 'Non Veg', count: 20 }\n      ]\n    },\n    {\n      category: 'Snacks',\n      items: [\n        { title: 'North', count: 8 },\n        { title: 'South', count: 10 },\n        { title: 'Chinese', count: 13 }\n      ]\n    }\n  ];\n\n  const handlers = useSwipeable({\n    onSwipedLeft: () => setIsSidebarOpen(true),\n    onSwipedRight: () => setIsSidebarOpen(false),\n    trackMouse: true // Enable mouse tracking for desktop\n  });\n\n  return (\n    <div className=\"p-4 bg-gray-100 min-h-screen\">\n      {/* Cart Icon */}\n      <div className=\"flex items-center justify-between mb-6 bg-green-600 p-4 rounded\">\n        <h1 className=\"text-2xl font-bold text-white\">&gt; Menu</h1>\n        <div className=\"flex items-center relative\">\n          <div className=\"relative\">\n            <ShoppingCart\n              className=\"w-8 h-8 text-white cursor-pointer\"\n              onClick={toggleSidebar}\n            />\n            {cartItems.length > 0 && (\n              <span className=\"absolute top-0 right-0 bg-red-600 text-white text-xs font-bold px-1.5 py-0.5 rounded-full\">\n                {cartItems.reduce((acc, item) => acc + item.quantity, 0)}\n              </span>\n            )}\n          </div>\n        </div>\n      </div>\n\n      <div className=\"flex items-center justify-end mb-2\">\n        <div className=\"flex items-center\">\n          <UnitSwitch unit={unit} toggleUnit={toggleUnit} />\n          <span className=\"ml-2\">Kg/Plate</span>\n        </div>\n      </div>\n\n      {/* Menu Sections */}\n      {menuData.map((section, index) => (\n        <div key={index} className=\"mb-6\">\n          <h2 className=\"text-xl font-bold mb-3\">{section.category}</h2>\n          {section.items.map((item, itemIndex) => (\n            <CollapsibleSection key={itemIndex} title={item.title} count={item.count}>\n              <MenuItem\n                category={section.category}\n                item={item}\n                onCartUpdate={updateCartCount}\n                unit={unit}\n              />\n            </CollapsibleSection>\n          ))}\n        </div>\n      ))}\n\n      {/* Sidebar */}\n      {isSidebarOpen && (\n        <div {...handlers} className=\"fixed top-0 right-0 w-80 h-full bg-white shadow-lg z-50 transition-transform transform translate-x-0\">\n          <SidebarCart cartItems={cartItems} onClose={toggleSidebar} />\n          {/* ChevronLeft for closing the sidebar */}\n          <button\n            onClick={toggleSidebar}\n            className=\"absolute top-1/2 right-0 p-4 bg-gray-600 text-white rounded-l-lg shadow-lg transform translate-x-0 transition-transform duration-300 ease-in-out\"\n          >\n            <ChevronLeft className=\"w-6 h-6\" />\n          </button>\n        </div>\n      )}\n\n      {/* Swipe Arrow */}\n      {!isSidebarOpen && (\n        <button\n          onClick={() => setIsSidebarOpen(true)}\n          className=\"fixed top-1/2 right-0 p-4 bg-blue-500 text-white rounded-l-lg shadow-lg transform -translate-x-full transition-transform duration-300 ease-in-out\"\n        >\n          <ChevronRight className=\"w-6 h-6\" />\n        </button>\n      )}\n    </div>\n  );\n};\n\nexport default Menu;\n\n\n\n","\nimport React from 'react';\nimport Menu from './MenuItem';\nfunction App(){\n    return (\n        <Menu/>\n    );\n}\n\n// import React from 'react';\n// import { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\n// import Sidebar from './Sidebar';\n// import Header from './Header';\n// // import DashboardContent from './DashboardContent'; \n// import OrdersList from './OrdersList';\n// import Dashboard from './Dashboard'; // The page component you want to navigate to\n// import CustomerList from './CustomersList';\n// import CustomerProfile from './CustomerDetails';\n// import ItemForm from './ItemForm';\n// import ItemsList from './ItemsList';\n// import MediaUpload from './MediaUpload';\n// function App() {\n//   return (\n//     <Router>\n//       <div className=\"flex bg-gray-100 min-h-screen\">\n//         <Sidebar />\n//         <div className=\"flex-1 flex flex-col\">\n//           <Header />\n//           <main className=\"flex-1 p-6\">\n//             <Routes>\n//               <Route path=\"/\" element={<Dashboard />} />\n//               <Route path=\"/orderslist\" element={<OrdersList />} />\n//               <Route path=\"/customerslist\" element = {<CustomerList/>}/>\n//               <Route path= \"/customersdetails\" element = {<CustomerProfile/>}/>\n//               <Route path= \"/itemslist\" element = {<ItemsList/>}/>\n//               <Route path= \"/itemadd\" element = {<ItemForm/>}/>\n//               <Route path= \"/addmedia\" element = {<MediaUpload/>}/>\n//             </Routes>\n//           </main>\n//         </div>\n//       </div>\n//     </Router>\n   \n//   );\n// }\n\nexport default App;\n\n","// import React from 'react';\n// import ReactDOM from 'react-dom/client'; // Ensure this is imported\n// // import MyApp from './app1';\n// import Contactform from './ContactForm';\n// const root = ReactDOM.createRoot(document.getElementById('root'));\n// root.render(\n//   <React.StrictMode>\n//     <Contactform/>\n//   </React.StrictMode>\n// );\n\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport './index.css';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n   <React.StrictMode>\n    < App />\n   </React.StrictMode>\n);\n"],"sourceRoot":""}